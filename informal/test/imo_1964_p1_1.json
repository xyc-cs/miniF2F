{
    "problem_name": "imo_1964_p1_1",
    "formal_statement": "theorem imo_1964_p1_1:\n  fixes n :: nat\n  assumes \"7 dvd (2^n-1)\"\n  shows \"3 dvd n\"",
    "informal_statement": "Let $n$ be a natural number. Show that if $7$ divides $2^n-1$, then $3$ divides $n$.",
    "informal_proof": "Since we know that $2^n-1$ is congruent to 0 (mod 7), we know that $2^n$ is congruent to 8 mod 7, which means $2^n$ is congruent to 1 mod 7.\n\nExperimenting with the residue of $2^n$ mod 7: \n\n$n$=1: 2\n$n$=2: 4\n$n$=3: 1 (this is because when $2^n$ is doubled to $2*2^n$, the residue doubles too, but $4*2=8$ is congruent to 1 (mod 7).\n\n$n$=4: 2\n$n$=5: 4\n$n$=6: 1\n\nThrough induction, we easy show that this is true since the residue doubles every time you double $2^n$.\n\nSo, the residue of $2^n$ mod 7 cycles in 2, 4, 1. Therefore, $n$ must be a multiple of 3.",
    "python_proof": [
        "\n\n        from sympy import *\n        n = Symbol('n')\n        print(factor(2**n-1))\n        print(factor(2**n))\n        print(factor(2**n-1).subs(n, 1))\n        print(factor(2**n-1).subs(n, 2))\n        print(factor(2**n-1).subs(n, 3))\n        print(factor(2**n-1).subs(n, 4))\n        print(factor(2**n-1).subs(n, 5))\n        print(factor(2**n-1).subs(n, 6))\n        print(factor(2**n-1).subs(n, 7))\n        print(factor(2**n-1).subs(n, 8))\n        print(factor(2**n-1).subs(n, 9))\n        print(factor(2**n-1).subs(n, 10))\n        print(factor(2**n-1).subs(n, 11))\n        print(factor(2**n-1).subs(n, 12))\n        print(factor(2**n-1).subs(n, 13))\n        print(factor(2**n-1).subs(n, 14))\n        print(factor(2**n-1).subs(n, 15))\n        print(factor(2**n-1).subs(n, 16))\n        print(factor(2**n-1).subs(n, 17))\n        print(factor(2**n-1).subs(n, 18))\n        print(factor(2**n-1).subs(n, 19))\n        print(factor(2**n-1).subs(n, 20))\n        print(factor(2**n-1).subs(n, 21))\n        print(factor(2**n-1).subs(n, 22))\n        print(factor(2**n-1).subs(n, 23))\n        print(factor(2**n-1).subs(n, 24))\n        print(factor(2**n-1).subs(n, 25))\n        print(factor(2**n-1).subs(n, 26))\n        print(factor(2**n-1).subs(n, 27))\n        print(factor(2**n-1).subs(n, 28))\n        print(factor(2**n-1).subs(n, 29))\n        print(factor(2**n-1).subs(n, 30))\n        print(factor(2**n-1).subs(n, 31))\n        print(factor(2**n-1).subs(n, 32))\n        print(factor(2**n-1).subs(n, 33))\n        print(factor(2**n-1).subs(n, 34))\n        print(factor(2**n-1).subs(n, 35))\n        print(factor(2**n-1).subs(n, 36))\n        print(factor(2**n-1).subs(n, 37))\n        print(factor(2**n-1).subs(n, 38))\n        print(factor(2**n-1).subs(n, 39))\n        print(factor(2**n-1).subs(n, 40))\n        print(factor(2**n-1).subs(n, 41))\n        print(factor(2**n-1).subs(n, 42))\n        print(factor(2**n-1).subs(n, 43))\n        print(factor(2**n-1).subs(n, 44))\n        print(factor(2**n-1).subs(n, 45))\n        print(factor(2**n-1).subs(n, 46))\n        print(factor(2**n-1).subs(n, 47))\n        print(factor(2**"
    ],
    "header": "(*\n  Authors: Albert Qiaochu Jiang\n*)\n\ntheory imo_1964_p1_1 imports\nComplex_Main\n\nbegin\n\n"
}