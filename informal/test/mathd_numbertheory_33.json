{
    "problem_name": "mathd_numbertheory_33",
    "formal_statement": "theorem mathd_numbertheory_33:\n  fixes n :: nat\n  assumes h0 : \"n < 398\"\n    and h1 : \"(n * 7) mod 398 = 1\"\n  shows \"n=57\"",
    "informal_statement": "Find an integer $n$ such that $0\\leq n<398$ and $n$ is a multiplicative inverse to 7 modulo 398. Show that it is 57.",
    "informal_proof": "We notice that 399 is a multiple of 7: \\[399=57\\cdot7.\\]Considering this equation modulo 398 gives \\[1\\equiv57\\cdot7\\pmod{398}\\]so the answer is $57$.",
    "python_proof": [
        "\n\n        from sympy import *\n        from sympy.abc import *\n        from sympy.ntheory import *\n        from sympy.ntheory.modular import *\n        from sympy.ntheory.residue_ntheory import *\n        from sympy.ntheory.primetest import *\n        from sympy.ntheory.generate import *\n        from sympy.ntheory.factor_ import *\n        from sympy.ntheory.factor_ import factorint\n        from sympy.ntheory.factor_ import factor\n        from sympy.ntheory.factor_ import divisors\n        from sympy.ntheory.factor_ import divisor_count\n        from sympy.ntheory.factor_ import divisor_sigma\n        from sympy.ntheory.factor_ import divisor_power\n        from sympy.ntheory.factor_ import divisor_range\n        from sympy.ntheory.factor_ import divisor_sum\n        from sympy.ntheory.factor_ import divisor_pi\n        from sympy.ntheory.factor_ import divisor_isqrt\n        from sympy.ntheory.factor_ import divisor_isqrt_list\n        from sympy.ntheory.factor_ import divisor_sigma_div\n        from sympy.ntheory.factor_ import divisor_sigma_sum\n        from sympy.ntheory.factor_ import divisor_sigma_div_sum\n        from sympy.ntheory.factor_ import divisor_sigma_div_sum_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_list_cum\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list_list_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list_list_list_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list_list_list_list_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list_list_list_list_list_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list_list_list_list_list_list_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list_list_list_list_list_list_list_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list_list_list_list_list_list_list_list_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list_list_list_list_list_list_list_list_list_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list_list_list_list_list_list_list_list_list_list_list\n        from sympy.ntheory.factor_ import divisor_sigma_sum_cum_list_cum_list_list_list_list_list_list_list_list_list_list_list_list_list\n       "
    ],
    "header": "(*\n  Authors: Albert Qiaochu Jiang\n*)\n\ntheory mathd_numbertheory_33 imports\n  Complex_Main\nbegin\n\n"
}