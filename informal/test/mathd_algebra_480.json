{
    "problem_name": "mathd_algebra_480",
    "formal_statement": "theorem mathd_algebra_480:\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes h0 : \"\\<And>x. x<0 \\<Longrightarrow> f x = -(x^2)-1\"\n    and h1 : \"\\<And>x. (0 \\<le> x \\<and> x < 4) \\<Longrightarrow> f x = 2\"\n    and h2 : \"\\<And>x. x\\<ge>4 \\<Longrightarrow> f x = sqrt x\"\n  shows \"f pi = 2\"",
    "informal_statement": "Let \\[f(x) = \\begin{cases}\n-x^2 - 1 &\\text{if }x<0, \\\\\n2&\\text{if }0 \\le x< 4, \\\\\n\\sqrt{x}&\\text{if }x \\ge 4.\n\\end{cases}\n\\]Find $f(\\pi)$. Show that it is 2.",
    "informal_proof": "Since $\\pi$ is about 3.14, we use the second case, so $f(\\pi) = 2$.",
    "python_proof": [
        "\n\n        from sympy import *\n        x = Symbol('x')\n        f = Piecewise((-x**2 - 1, x < 0), (2, 0 <= x < 4), (sqrt(x), x >= 4))\n        f.subs(x, pi)\n\n        Output:\n        2\n\n        Formal:\n\n        From the Python snippet, we get the following Isabelle code:\n\n        lemma \"f(pi) = 2\"\n          apply(simp)\n          apply(subst f_def)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply(simp)\n          apply"
    ],
    "header": "(*\n  Authors: Albert Qiaochu Jiang\n*)\n\ntheory mathd_algebra_480 imports\n  Complex_Main\nbegin\n\n"
}