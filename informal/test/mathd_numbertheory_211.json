{
    "problem_name": "mathd_numbertheory_211",
    "formal_statement": "theorem mathd_numbertheory_211 :\n  \"card {n::nat. n<60 \\<and> 6 dvd (4 * n - 2)} = 20\"",
    "informal_statement": "How many integers $n$ satisfy $0<n<60$ and $4n\\equiv 2\\pmod 6?$ Show that it is 20.",
    "informal_proof": "The residue of $4n\\pmod 6$ is determined by the residue of $n\\pmod 6.$ We can build a table showing the possibilities: $$\\begin{array}{r || c * 5 {| c}}\nn\\pmod 6 & 0 & 1 & 2 & 3 & 4 & 5 \\\\\n\\hline\n4n\\pmod 6 & 0 & 4 & 2 & 0 & 4 & 2\n\\end{array}$$As the table shows, $4n\\equiv 2\\pmod 6$ is true when $n\\equiv 2$ or $n\\equiv 5\\pmod 6.$ Otherwise, it's false.\n\nSo, our problem is to count all $n$ between $0$ and $60$ that leave a remainder of $2$ or $5$ modulo $6.$ These integers are $$2, 5, 8, 11, 14, 17, \\ldots, 56, 59.$$There are $20$ integers in this list.",
    "python_proof": [
        "\n\n        from sympy import *\n        n = Symbol('n')\n        f = 4*n - 2\n        print(f.subs(n, 0))\n        print(f.subs(n, 1))\n        print(f.subs(n, 2))\n        print(f.subs(n, 3))\n        print(f.subs(n, 4))\n        print(f.subs(n, 5))\n        print(f.subs(n, 6))\n        print(f.subs(n, 7))\n        print(f.subs(n, 8))\n        print(f.subs(n, 9))\n        print(f.subs(n, 10))\n        print(f.subs(n, 11))\n        print(f.subs(n, 12))\n        print(f.subs(n, 13))\n        print(f.subs(n, 14))\n        print(f.subs(n, 15))\n        print(f.subs(n, 16))\n        print(f.subs(n, 17))\n        print(f.subs(n, 18))\n        print(f.subs(n, 19))\n        print(f.subs(n, 20))\n        print(f.subs(n, 21))\n        print(f.subs(n, 22))\n        print(f.subs(n, 23))\n        print(f.subs(n, 24))\n        print(f.subs(n, 25))\n        print(f.subs(n, 26))\n        print(f.subs(n, 27))\n        print(f.subs(n, 28))\n        print(f.subs(n, 29))\n        print(f.subs(n, 30))\n        print(f.subs(n, 31))\n        print(f.subs(n, 32))\n        print(f.subs(n, 33))\n        print(f.subs(n, 34))\n        print(f.subs(n, 35))\n        print(f.subs(n, 36))\n        print(f.subs(n, 37))\n        print(f.subs(n, 38))\n        print(f.subs(n, 39))\n        print(f.subs(n, 40))\n        print(f.subs(n, 41))\n        print(f.subs(n, 42))\n        print(f.subs(n, 43))\n        print(f.subs(n, 44))\n        print(f.subs(n, 45))\n        print(f.subs(n, 46))\n        print(f.subs(n, 47))\n        print(f.subs(n, 48))\n        print(f.subs(n, 49))\n        print(f.subs(n, 50))\n        print(f.subs(n, 51))\n        print(f.subs(n, 52))\n        print(f.subs(n, 53))\n        print(f.subs(n, 54))\n        print(f.subs(n, 55))\n        print(f.subs(n, 56))\n        print(f.subs(n, 57))\n        print(f.subs(n, 58))\n        print(f.subs(n, 59))\n\n        print(f.subs(n, 60))\n\n        print(f.subs(n, 61))\n\n        print(f.subs(n, 62))\n\n        print(f.subs(n, 63))\n\n        print(f.subs(n, 64))\n\n        print(f.subs(n, 65))\n\n        print(f.subs(n"
    ],
    "header": "(*\n  Authors: Wenda Li\n*)\n\ntheory mathd_numbertheory_211 \n  imports Complex_Main \"HOL-Computational_Algebra.Computational_Algebra\"\n    \"HOL-Number_Theory.Number_Theory\"\nbegin\n\n"
}