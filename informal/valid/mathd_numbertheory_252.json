{
    "problem_name": "mathd_numbertheory_252",
    "formal_statement": "theorem mathd_numbertheory_252:\n  \"(fact 7) mod 23 = (3::nat)\"",
    "informal_statement": "What is the remainder when $7!$ is divided by $23$?\n\n(Note: $n!$ means \"n factorial\", defined as the product of all integers from $1$ to $n$.) Show that it is 3.",
    "informal_proof": "$7!$ is defined as $1\\cdot 2\\cdot 3\\cdot 4\\cdot 5\\cdot 6\\cdot 7$.\n\nNote that $1\\cdot 2\\cdot 3\\cdot 4 = 24 \\equiv 1\\pmod{23}$. So, $$7! \\equiv 1\\cdot 5\\cdot 6\\cdot 7\\pmod{23}.$$Furthermore, we have $1\\cdot 5\\cdot 6 = 30\\equiv 7 \\pmod{23}$, so \\begin{align*}\n7! &\\equiv 7\\cdot 7 \\\\\n&= 49 \\\\\n&\\equiv 3 \\pmod{23}.\n\\end{align*}The remainder is $3$.",
    "python_proof": [
        "\n\n        from sympy import *\n        from sympy.abc import *\n        from sympy.parsing.sympy_parser import parse_expr\n        from sympy.printing import ccode\n        from sympy.utilities.lambdify import lambdify\n        from sympy.utilities.autowrap import autowrap\n        from sympy.utilities.iterables import cartes\n        from sympy.utilities.iterables import variations\n        from sympy.utilities.iterables import multiset_permutations\n        from sympy.utilities.iterables import sift\n        from sympy.utilities.iterables import flatten\n        from sympy.utilities.iterables import numbered_symbols\n        from sympy.utilities.iterables import uniq\n        from sympy.utilities.iterables import postorder_traversal\n        from sympy.utilities.iterables import preorder_traversal\n        from sympy.utilities.iterables import contentview\n        from sympy.utilities.iterables import variations\n        from sympy.utilities.iterables import variations_with_replacement\n        from sympy.utilities.iterables import variations_without_replacement\n        from sympy.utilities.iterables import multiset_permutations\n        from sympy.utilities.iterables import multiset_partitions\n        from sympy.utilities.iterables import multiset_variations\n        from sympy.utilities.iterables import multiset_variations_with_replacement\n        from sympy.utilities.iterables import multiset_variations_without_replacement\n        from sympy.utilities.iterables import multiset_combinations\n        from sympy.utilities.iterables import multiset_combinations_with_replacement\n        from sympy.utilities.iterables import multiset_combinations_without_replacement\n        from sympy.utilities.iterables import multiset_derangements\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n        from sympy.utilities.iterables import multiset_derangements_without_replacement\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n        from sympy.utilities.iterables import multiset_derangements_without_replacement\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n        from sympy.utilities.iterables import multiset_derangements_without_replacement\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n        from sympy.utilities.iterables import multiset_derangements_without_replacement\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n        from sympy.utilities.iterables import multiset_derangements_without_replacement\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n        from sympy.utilities.iterables import multiset_derangements_without_replacement\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n        from sympy.utilities.iterables import multiset_derangements_without_replacement\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n        from sympy.utilities.iterables import multiset_derangements_without_replacement\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n        from sympy.utilities.iterables import multiset_derangements_without_replacement\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n        from sympy.utilities.iterables import multiset_derangements_without_replacement\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n        from sympy.utilities.iterables import multiset_derangements_without_replacement\n        from sympy.utilities.iterables import multiset_derangements_with_replacement\n"
    ],
    "header": "(*\n  Authors: Albert Qiaochu Jiang\n*)\n\ntheory mathd_numbertheory_252 imports\n  Complex_Main\nbegin\n\n"
}