{
    "problem_name": "imo_1967_p3",
    "formal_statement": "theorem imo_1967_p3:\n  fixes k m n :: nat\n    and c :: \"nat \\<Rightarrow> nat\"\n  assumes h0 : \"0<k \\<and> 0<m \\<and> 0<n\"\n    and h1 : \"\\<And>s. c s = s * (s+1)\"\n    and h2 : \"prime (k+m+1)\"\n    and h3 : \"n+1 < k + m + 1\"\n  shows \"(\\<Prod>(i::nat) = 1..n.(c i)) dvd (\\<Prod>(i::nat) = 1..n.(c (m+i)) - c k)\"",
    "informal_statement": "Let $k, m, n$ be natural numbers such that $m+k+1$ is a prime greater than $n+1.$ Let $c_s=s(s+1).$ Prove that the product $(c_{m+1}-c_k)(c_{m+2}-c_k)\\cdots (c_{m+n}-c_k)$ is divisible by the product $c_1c_2\\cdots c_n$.",
    "informal_proof": "We have that $c_1c_2c_3...c_n=n!(n+1)$\n\nand we have that $c_a-c_b=a^2-b^2+a-b=(a-b)(a+b+1)$\n\nSo we have that $(c_{m+1}-c_k)(c_{m+2}-c_k)\\ldots(c_{m+n}-c_k)=\\frac{(m+n-k)!}{(m-n)!}\\frac{(m+n+k+1)!}{(m+k+1)!}$ We have to show that:\n\n$\\frac{(c_{m+1}-c_k)(c_{m+2}-c_k)\\ldots(c_{m+n}-c_k)}{n!(n+1)!}=\\frac{(m+n-k)!}{(m-n)!n!}\\frac{(m+n+k+1)!}{(m+k)!(n+1)!} \\frac 1{m+k+1}$ is an integer\n\nBut $\\frac{(m+n-k)!}{(m-n)!n!}=\\binom {m+n-k}n$ is an integer and ${(m+n+k+1)!}{(m+k)!(n+1)!} \\frac 1{m+k+1}=\\binom {m+n+k+1}{n+1}\\frac 1{m+k+1}$ is an integer because $m+k+1|m+n+k+1!$ but does not divide neither $n+1!$ nor $m+n!$ because $m+k+1$ is prime and it is greater than $n+1$ (given in the hypotesis) and $m+n$.\n\nThe above solution was posted and copyrighted by Simo_the_Wolf. The original thread can be found here: [https://aops.com/community/p392191]",
    "python_proof": [
        "\n\n        from sympy import *\n        from sympy.abc import *\n        from sympy.ntheory import factorint\n        from sympy.ntheory.factor_ import divisors\n        from sympy.ntheory.generate_primes import nextprime\n        from sympy.ntheory.primetest import isprime\n        from sympy.polys.polytools import factor\n        from sympy.polys.polyutils import factor_list\n        from sympy.polys.polyutils import primitive\n        from sympy.polys.polyutils import squarefree\n        from sympy.polys.polyutils import total_degree\n        from sympy.polys.polyutils import uniq\n        from sympy.polys.polyutils import uniq_list\n        from sympy.polys.polyutils import uniq_roots\n        from sympy.polys.polyutils import uniq_roots_list\n        from sympy.polys.polyutils import uniq_terms\n        from sympy.polys.polyutils import uniq_terms_list\n        from sympy.polys.polyutils import uniq_vars\n        from sympy.polys.polyutils import uniq_vars_list\n        from sympy.polys.polyutils import vars_for\n        from sympy.polys.polyutils import vars_list\n        from sympy.polys.polyutils import vars_set\n        from sympy.polys.polyutils import vars_set_list\n        from sympy.polys.polyutils import xreplace\n        from sympy.polys.polyutils import xreplace_dict\n        from sympy.polys.polyutils import xreplace_dict_list\n        from sympy.polys.polyutils import xreplace_list\n        from sympy.polys.polyutils import xreplace_list_list\n        from sympy.polys.polyutils import xreplace_map\n        from sympy.polys.polyutils import xreplace_map_list\n        from sympy.polys.polyutils import xreplace_map_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list_list_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list_list_list_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n        from sympy.polys.polyutils import xreplace_map_list_list_list_list_list_list_list_list_list_list_list_list_list_list"
    ],
    "header": "(*\n  Authors: Albert Qiaochu Jiang\n*)\n\ntheory imo_1967_p3 imports\n  Complex_Main \"HOL-Computational_Algebra.Computational_Algebra\"\nbegin\n\n"
}