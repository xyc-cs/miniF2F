{
    "problem_name": "mathd_numbertheory_326",
    "formal_statement": "theorem mathd_numbertheory_326:\n  fixes n :: nat\n  assumes \"(n - 1) * n * (n + 1) = 720\" \n  shows \"(n + 1) = 10\"",
    "informal_statement": "The product of three consecutive integers is 720. What is the largest of these integers? Show that it is 10.",
    "informal_proof": "Let the integers be $n-1$, $n$, and $n+1$.  Their product is $n^3-n$.  Thus $n^3=720+n$.  The smallest perfect cube greater than $720$ is $729=9^3$, and indeed $729=720+9$.  So $n=9$ and the largest of the integers is $n+1=10$.",
    "python_proof": [
        "\n\n        from sympy import *\n        n = Symbol('n')\n        n1 = n-1\n        n2 = n\n        n3 = n+1\n        n1n2n3 = n1*n2*n3\n        n1n2n3 = 720\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n        n1n2n3 = n1n2n3.factor()\n        n1n2n3 = n1n2n3.expand()\n       "
    ],
    "header": "(*\n  Authors: Wenda Li\n*)\n\ntheory mathd_numbertheory_326 \n  imports Complex_Main \"HOL-Computational_Algebra.Computational_Algebra\"\nbegin\n\n"
}