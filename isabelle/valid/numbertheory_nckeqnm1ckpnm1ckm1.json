{
    "problem_name": "numbertheory_nckeqnm1ckpnm1ckm1",
    "formal_statement": "theorem numbertheory_nckeqnm1ckpnm1ckm1:\n  fixes n k ::nat\n  assumes \"0 < n \\<and> 0 < k\"\n    and \"k \\<le> n\" \n  shows \"n choose k =  (n - 1) choose k + (n - 1) choose (k - 1)\"",
    "informal_statement": "Show that for positive integers $n$ and $k$ with $k \\leq n$, we have \n$\\binom{n}{k} = \\binom{n-1}{k} + \\binom{n-1}{k-1}$.",
    "informal_proof": "We have $\\binom{n-1}{k} + \\binom{n-1}{k-1} = \\frac{(n-1)!}{k!(n-1-k)!} + \\frac{(n-1)!}{(k-1)!(n-k)!} = \\frac{(n-k) (n-1)!}{k!(n-k)!} + \\frac{k (n-1)!}{k!(n-k)!}$.\nSo $\\binom{n-1}{k} + \\binom{n-1}{k-1} = \\frac{((n-k) + k) (n-1)!}{k!(n-k)!} = \\frac{n!}{k!(n-k)!} = \\binom{n}{k}$.",
    "python_proof": [
        "\n\n        from sympy import *\n        n, k = symbols('n k')\n        assert binomial(n, k) == binomial(n-1, k) + binomial(n-1, k-1)\n\n        Isabelle Snippet:\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <= n ==> binomial n k = binomial (n - 1) k + binomial (n - 1) (k - 1)\"\n          by (simp add: binomial_def)\n\n        lemma \"n k. k <="
    ],
    "header": "(*\n  Authors: Wenda Li\n*)\n\ntheory numbertheory_nckeqnm1ckpnm1ckm1 \n  imports Complex_Main \"HOL-Computational_Algebra.Computational_Algebra\"\n    \"HOL-Number_Theory.Number_Theory\"\nbegin\n\n"
}