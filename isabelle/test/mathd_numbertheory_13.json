{
    "problem_name": "mathd_numbertheory_13",
    "formal_statement": "theorem mathd_numbertheory_13:\n  fixes u v :: nat\n  assumes \"u>0 \\<and> v>0\"\n    and \"(14 * u) mod 100 = 46\"\n    and \"(14 * v) mod 100 = 46\"\n    and \"u < 50\"\n    and \"v < 100\"\n    and \"50 < v\" \n  shows \"(u + v) / 2 = 64\"",
    "informal_statement": "What is the average of the two smallest positive integer solutions to the congruence $$14u \\equiv 46 \\pmod{100}~?$$ Show that it is 64.",
    "informal_proof": "Note that $14$, $46$, and $100$ all have a common factor of $2$, so we can divide it out: the solutions to $$14u \\equiv 46 \\pmod{100}$$ are identical to the solutions to $$7u \\equiv 23 \\pmod{50}.$$ Make sure you see why this is the case.\n\nNow we can multiply both sides of the congruence by $7$ to obtain $$49u \\equiv 161 \\pmod{50},$$ which also has the same solutions as the previous congruence, since we could reverse the step above by multiplying both sides by $7^{-1}$. (We know that $7^{-1}$ exists modulo $50$ because $7$ and $50$ are relatively prime.)\n\nReplacing each side of $49u\\equiv 161$ by a $\\pmod{50}$ equivalent, we have $$-u \\equiv 11\\pmod{50},$$ and thus $$u \\equiv -11\\pmod{50}.$$ This is the set of solutions to our original congruence. The two smallest positive solutions are $-11+50 = 39$ and $-11+2\\cdot 50 = 89$. Their average is $64$.",
    "python_proof": [
        "\n\n        from sympy import *\n        x, y, z = symbols('x y z')\n        u = 14*x + 46\n        v = 7*y + 23\n        w = 49*z + 161\n        uvw = u*v*w\n        uvw_mod = uvw.subs({x: 39, y: 89, z: 1})\n        uvw_mod.simplify()\n        uvw_mod.factor()\n        uvw_mod.factor_mod(50)\n        uvw_mod.factor_mod(100)\n        uvw_mod.factor_mod(50).factor_mod(100)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100).factor_mod(2).factor_mod(50).factor_mod(100)\n        uvw_mod.factor_mod(50).factor_mod(100).factor_mod(2).factor"
    ],
    "header": "(*\n  Authors: Wenda Li\n*)\n\ntheory mathd_numbertheory_13 \n  imports Complex_Main \"HOL-Computational_Algebra.Computational_Algebra\"\n  \"HOL-Number_Theory.Number_Theory\"\nbegin\n\n"
}